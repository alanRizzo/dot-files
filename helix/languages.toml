# ============================================================
# Formatter and Language Server Configuration
# ============================================================

# ----------------------------
# Global Formatter Settings
# ----------------------------

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["fmt", "-"] }
auto-format = true

[[language]]
name = "bash"
formatter = { command = "shfmt", args = ["-i", "2", "-"] }
auto-format = true

[[language]]
name = "dockerfile"
formatter = { command = "dockerfile-utils", args = ["format"] }
auto-format = true


[[language]]
name = "groovy"
auto-format = true
file-types = ["groovy", { glob = "Jenkinsfile*" }]

## ----------------------------
# Language Server Specific Configurations
# ----------------------------

# --- YAML Language Server ---
[[language]]
name = "yaml"
auto-format = true

[language-server.yaml-language-server.config.yaml]
format = { enable = true }
validation = true

[language-server.yaml-language-server.config.yaml.schemas]
"https://json.schemastore.org/github-workflow.json" = ".github/workflows/*.{yml,yaml}"
"https://raw.githubusercontent.com/ansible-community/schemas/main/f/ansible-tasks.json" = "roles/{tasks,handlers}/*.{yml,yaml}"

# --- Python ---
[[language]]
name = "python"
language-servers = ["basedpyright", "ruff"]
auto-format = true
roots = ["pyproject.toml", "setup.py", "Poetry.lock"]
formatter = { command = "ruff", args = ["format", "-"] }

# [language.config.completion.snippets.custom.pdb]
# prefix = ["pdb"]
# body = ["__import__('pdb').set_trace()"]
# description = "Insert pdb call."
# scope = "expr"

[language.debugger]
name = "debugpy"
transport = "stdio"
command = "python3"
args = ["-m", "debugpy.adapter"]

[[language.debugger.templates]]
name = "source"
request = "launch"
completion = [{ name = "entrypoint", completion = "filename", default = "." }]
args = { mode = "debug", program = "{0}" }

[language-server.basedpyright]
command = "basedpyright-langserver"
args = ["--stdio"]

[language-server.basedpyright.config]
basedpyright.analysis.typeCheckingMode = "basic"
basedpyright.analysis.diagnosticMode = "openFilesOnly"

[language-server.ruff]
command = "ruff"
args = ["server"]

[language-server.ruff.config.settings]
args = ["--ignore", "E501"]

# --- Rust (Rust Analyzer) ---
[language-server.rust-analyzer.config.check]
command = "clippy"

[language-server.rust-analyzer.config.cargo]
features = "all"

# --- Tailwind CSS ---
[language-server.tailwindcss-ls]
command = "tailwindcss-language-server"
args = ["--stdio"]

# ----------------------------
# Frontend and Other Languages Configuration
# ----------------------------

# HTML with Tailwind CSS support
[[language]]
name = "html"
language-servers = ["vscode-html-language-server", "tailwindcss-ls"]
auto-format = true

# CSS with Tailwind CSS support
[[language]]
name = "css"
language-servers = ["vscode-css-language-server", "tailwindcss-ls"]
auto-format = true

# JavaScript configuration
[[language]]
name = "javascript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]
auto-format = true

# TypeScript configuration
[[language]]
name = "typescript"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
]
auto-format = true

# TSX (TypeScript + JSX) with Tailwind CSS support
[[language]]
name = "tsx"
language-servers = [
  { name = "typescript-language-server", except-features = [
    "format",
  ] },
  "biome",
  "tailwindcss-ls",
]
auto-format = true

# Biome server (used in JS, TS, TSX, and JSON)
[language-server.biome]
command = "biome"
args = ["lsp-proxy"]

# JSON configuration
[[language]]
name = "json"
language-servers = [
  { name = "vscode-json-language-server", except-features = [
    "format",
  ] },
  "biome",
]
auto-format = true

# ----------------------------
# BDD tests
# ----------------------------

[[language]]
name = "gherkin"
scope = "source.feature"
file-types = ["feature"]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }

[[grammar]]
name = "gherkin"
# source = { git = "https://github.com/SamyAB/tree-sitter-gherkin", rev = "main" }
# source = { git = "https://github.com/tonycsoka/tree-sitter-gherkin", rev = "main" }
# source = { git = "https://github.com/binhtran432k/tree-sitter-gherkin", rev = "main" }


language-servers = ["cucumber-language-server"]
auto-format = true

[language-server.cucumber-language-server]
command = "cucumber-language-server"
args = ["--stdio"]
